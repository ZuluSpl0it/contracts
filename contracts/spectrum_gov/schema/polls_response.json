{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PollsResponse",
  "type": "object",
  "required": [
    "polls"
  ],
  "properties": {
    "polls": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PollInfo"
      }
    }
  },
  "definitions": {
    "PollExecuteMsg": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "execute"
          ],
          "properties": {
            "execute": {
              "type": "object",
              "required": [
                "contract",
                "msg"
              ],
              "properties": {
                "contract": {
                  "type": "string"
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "PollInfo": {
      "type": "object",
      "required": [
        "creator",
        "deposit_amount",
        "description",
        "end_height",
        "execute_msgs",
        "id",
        "no_votes",
        "status",
        "title",
        "yes_votes"
      ],
      "properties": {
        "creator": {
          "type": "string"
        },
        "deposit_amount": {
          "$ref": "#/definitions/Uint128"
        },
        "description": {
          "type": "string"
        },
        "end_height": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "execute_msgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PollExecuteMsg"
          }
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "link": {
          "type": [
            "string",
            "null"
          ]
        },
        "no_votes": {
          "$ref": "#/definitions/Uint128"
        },
        "status": {
          "$ref": "#/definitions/PollStatus"
        },
        "title": {
          "type": "string"
        },
        "total_balance_at_end_poll": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "yes_votes": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "PollStatus": {
      "type": "string",
      "enum": [
        "in_progress",
        "passed",
        "rejected",
        "executed",
        "expired"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
